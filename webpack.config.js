const {VueLoaderPlugin}=require('vue-loader');
const HtmlWebpackPlugin=require('html-webpack-plugin');

const cache={};
module.exports={
	mode:'production',
	entry:'./src/main.ts',
	output:{
		clean:true,
	},
	module:{
		rules:[
			{
				sideEffects:true,
				test:/\.vue$/,
				use:[
					{
						loader:'vue-loader',
						options:{
							compilerOptions:{
								whitespace:'condense',
							},
							hotReload:false,
						},
					},
				],
			},
			//region 加载ts
			{
				test:/\.ts$/,
				use:[
					{
						loader:'ts-loader',
						options:{
							appendTsSuffixTo:[/\.vue$/],
							transpileOnly:true,
							compilerOptions:{
								strict:true,
								module:'esnext',
								target:'esnext',
								moduleResolution:'bundler',
								allowJs:true,
								useDefineForClassFields:true,
								importHelpers:true,
								resolveJsonModule:true,
								esModuleInterop:true,
								sourceMap:true,
							},
						}
					},
				],
			},
			//endregion
			//region 加载样式表
			{
				sideEffects:true,
				test:/\.css$/,
				use:(cache.cssLoaders=[
					//生成模式下: 提取css到单独文件
					'vue-style-loader',
					{
						loader:'css-loader',
						options:{
							sourceMap:true,
							importLoaders:2,
						}
					},
					{
						loader:'postcss-loader',
						options:{
							sourceMap:true,
							postcssOptions:{
								plugins:[
									require('autoprefixer'),
								]
							}
						}
					},
				]),
			},
			{
				sideEffects:true,
				test:/\.scss$/,
				use:[
					...cache.cssLoaders,
					{
						loader:'sass-loader',
						options:{
							sourceMap:true,
							sassOptions:{
								outputStyle:'expanded',
							},
						},
					},
				]
			},
			//endregion
		]
	},
	resolve:{
		alias:{
			vue$:'vue/dist/vue.runtime.esm.js',
		},
	},
	plugins:[
		new VueLoaderPlugin(),
		new HtmlWebpackPlugin({
			template:'index.html'
		}),
	],
	performance:{
		hints:false,
	},
}
